(define (amount sizes)
  (if (null? sizes)
  1
  (* (car sizes) (amount (cdr sizes)))))

(define (make-multi-vector . xs)
  (let ( (sizes (car xs))
       (fill
        (if (null? (cdr xs))
         0
       (cadr xs))))
    (list sizes (make-vector (amount sizes) fill))))

  (define m (make-multi-vector '(11 12 9 16 )))
  
  (define (to-normal-ind sizes xs)
    (if (null? sizes)
        0
    (+ (* (car xs) (amount( cdr sizes))) (to-normal-ind (cdr sizes)(cdr xs)))))
  
  (define (multi-vector-ref vect coord)
    (vector-ref (cadr vect) (to-normal-ind (car vect) coord)))
    
    (define (multi-vector-set! vect coord num)
    (vector-set! (cadr vect) (to-normal-ind (car vect) coord) num))
      
    (multi-vector-set! m '(10 7 6 12) 'test)
(multi-vector-ref m '(10 7 6 12)) 

; Индексы '(1 2 1 1) и '(2 1 1 1) — разные индексы
(multi-vector-set! m '(1 2 1 1) 'X)
(multi-vector-set! m '(2 1 1 1) 'Y)
(multi-vector-ref m '(1 2 1 1)) 
(multi-vector-ref m '(2 1 1 1)) 

(define m (make-multi-vector '(3 5 7) -1))
(multi-vector-ref m '(0 0 0)) 